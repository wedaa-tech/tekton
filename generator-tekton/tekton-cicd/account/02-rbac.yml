apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-service-account
  namespace: test-namespace 
secrets:
  - name: github-secret
  - name: docker-credentials

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-spring,go,python-role
  namespace: test-namespace
rules:
  - apiGroups: ["triggers.tekton.dev"]
    resources:
      [
        "eventlisteners",
        "triggerbindings",
        "triggertemplates",
        "triggers",
        "interceptors",
      ]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["pipelineruns", "pipelineresources", "taskruns"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["impersonate"]
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    resourceNames: ["tekton-triggers"]
    verbs: ["use"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-spring,go,python-binding
  namespace: test-namespace
subjects:
  - kind: ServiceAccount
    name: tekton-service-account
    namespace: test-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-spring,go,python-role
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tekton-spring,go,python-clusterrole
  namespace: test-namespace
rules:
  - apiGroups: ["triggers.tekton.dev"]
    resources: ["clustertriggerbindings", "clusterinterceptors", "interceptors"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-spring,go,python-clusterbinding
  namespace: test-namespace
subjects:
  - kind: ServiceAccount
    name: tekton-service-account
    namespace: test-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-spring,go,python-clusterrole
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-spring,go,python-kubectl-role
  namespace: test-namespace
rules:
  - apiGroups:
      - "*"
    resources:
      - pods
      - deployments
      - deployments/scale
      - deployments/status
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-spring,go,python-kubectl-binding
  namespace: test-namespace
subjects:
  - kind: ServiceAccount
    name: tekton-service-account
    namespace: test-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-spring,go,python-kubectl-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: test-namespace
  name: tekton-spring,go,python-ssh-role
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-spring,go,python-ssh-binding
  namespace: test-namespace
subjects:
  - kind: ServiceAccount
    name: tekton-service-account
    namespace: test-namespace
roleRef:
  kind: Role
  name: tekton-spring,go,python-ssh-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-git-access
  namespace: test-namespace
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create", "get", "list", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-spring,go,python-git-access-binding
  namespace: test-namespace
subjects:
  - kind: ServiceAccount
    name: tekton-service-account
    namespace: test-namespace
roleRef:
  kind: ClusterRole
  name: tekton-spring,go,python-git-access
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-spring,go,python-workspace-access-role
  namespace: test-namespace
rules:
  - apiGroups: [""]
    resources: ["pods/exec", "pods/log"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "exec"]
  - apiGroups: ["tekton.dev"]
    resources: ["pipelineruns", "tasks", "taskruns"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-spring,go,python-workspace-access-binding
  namespace: test-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-spring,go,python-workspace-access-role
subjects:
  - kind: ServiceAccount
    name: ticgo-pipeline-service-account
    namespace: test-namespace
