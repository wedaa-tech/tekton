apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: <%= componentName %>-pipeline
  namespace: <%= projectName %>-namespace
spec:
  description: |
    This pipeline clones a git repo, builds a Docker image with Kaniko and
    pushes it to a registry
  params:
    - name: repo-url
      type: string
    - name: revision
      type: string
    - name: submodules
      type: string
    - name: image-reference
      type: string
    - name: git-branch
      type: string
    - name: author
      type: string
    - name: clone-dir
      type: string
    - name: image
      type: string
    - name: maven-image
      type: string
    

  workspaces:
    - name: github-secret
    - name: shared-data
    - name: docker-credentials
    - name: cache-dir
    
  tasks:
    - name: fetch-source
      taskRef:
        name: clone-repo
      workspaces:
        - name: source
          workspace: shared-data
        - name: github-secret
          workspace: github-secret
      params:
        - name: repo-url
          value: $(params.repo-url)
        - name: revision
          value: $(params.revision)
        - name: submodules
          value: $(params.submodules)
        - name: git-branch
          value: $(params.git-branch)
        - name: author
          vlaue: $(params.author)
       

    - name: test-cases
      onError: continue
      runAfter: ["fetch-source"]
      taskRef:
        name: cash-deposits-test-cases
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: clone-dir
          value: $(params.clone-dir)
        - name: git-branch
          value: $(params.git-branch)

    - name: get-commit-sha
      runAfter: ["fetch-source"]
      taskRef:
        name: get-commit-sha
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: clone-dir
          value: "$(params.clone-dir)"
    
    <%_ if (componentType == "go" || componentType == "python" || componentType == "angular" || componentType == "react") { _%>
    - name: build-push
      runAfter: ["get-commit-sha"]
      taskRef:
        name: build-and-push-kaniko
      workspaces:
        - name: source
          workspace: shared-data
        - name: dockerconfig
          workspace: docker-credentials
        - name: cache-dir
          workspace: cache-dir
      params:
        - name: image
          value: $(params.image)
        - name: clone-dir
          value: "$(params.clone-dir)"
        - name: commit_sha
          value: "$(tasks.get-commit-sha.results.commit-sha)"
    <%_ } _%>
    
    <%_ if (componentType == "spring") { _%>
    - name: build-push
      runAfter: ["get-commit-sha"]
      taskRef:
        name: jib-maven
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: image
          value: $(params.image)
        - name: maven-image
          value: $(params.maven-image)
    <%_ } _%>

    - name: <%= componentName %>-deploy
      runAfter: ["build-push"]
      workspaces:
        - name: source
          workspace: shared-data 
      taskRef:
        name: <%= componentName %>-deploy
      params:
      <%_ if (cloudProvider == "aws") { _%>
        - name: aws_access_key_id
          value: "$AWS_ACCESS_KEY_ID"
        - name: aws_secret_access_key
          value: "$AWS_SECRET_ACCESS_KEY"
        - name: region
          value: "$AWS_REGION"
        - name: eks-cluster-name
          value: <%= clusterName %>
    <%_ } _%>
    <%_ if (cloudProvider == "azure") { _%>
        - name: azure-client-id
          value: $AZURE_CLIENT_ID
        - name: azure-client-secret
          value: $AZURE_CLIENT_SECRET
        - name: azure-tenant-id
          value: $AZURE_TENANT_ID
        - name: azure-subscription-id
          value: $AZURE_SUBSCRIPTION_ID
        - name: aks-cluster-name
          value: <%= clusterName %>
    <%_ } _%>
       