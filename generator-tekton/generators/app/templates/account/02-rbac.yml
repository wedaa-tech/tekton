apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-service-account
  namespace: <%= namespaceName %> 
  # annotations:
  #   <%_ if (cloudProvider == "aws") { _%>
  #   eks.amazon.com/role-arn: "arn:aws:iam::855770807483:role/AWSIRSAKaniko"
  #   <%_ } _%>
  #   <%_ if (cloudProvider == "azure") { _%>
  #   eks.amazon.com/role-arn: "arn:aws:iam::855770807483:role/AWSIRSAKaniko"
  #   <%_ } _%>
secrets:
  - name: github-secret

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-<%= ComponentName %>-role
  namespace: <%= namespaceName %>
rules:
  - apiGroups: ["triggers.tekton.dev"]
    resources:
      [
        "eventlisteners",
        "triggerbindings",
        "triggertemplates",
        "triggers",
        "interceptors",
      ]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["pipelineruns", "pipelineresources", "taskruns"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["impersonate"]
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    resourceNames: ["tekton-triggers"]
    verbs: ["use"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-<%= ComponentName %>-binding
  namespace: <%= namespaceName %>
subjects:
  - kind: ServiceAccount
    name: tekton-service-account
    namespace: <%= namespaceName %>
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-<%= ComponentName %>-role
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tekton-<%= ComponentName %>-clusterrole
  namespace: <%= namespaceName %>
rules:
  - apiGroups: ["triggers.tekton.dev"]
    resources: ["clustertriggerbindings", "clusterinterceptors", "interceptors"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-<%= ComponentName %>-clusterbinding
  namespace: <%= namespaceName %>
subjects:
  - kind: ServiceAccount
    name: tekton-service-account
    namespace: <%= namespaceName %>
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-<%= ComponentName %>-clusterrole
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-<%= ComponentName %>-kubectl-role
  namespace: <%= namespaceName %>
rules:
  - apiGroups:
      - "*"
    resources:
      - pods
      - deployments
      - deployments/scale
      - deployments/status
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-<%= ComponentName %>-kubectl-binding
  namespace: <%= namespaceName %>
subjects:
  - kind: ServiceAccount
    name: tekton-service-account
    namespace: <%= namespaceName %>
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-<%= ComponentName %>-kubectl-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: <%= namespaceName %>
  name: tekton-<%= ComponentName %>-ssh-role
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-<%= ComponentName %>-ssh-binding
  namespace: <%= namespaceName %>
subjects:
  - kind: ServiceAccount
    name: tekton-service-account
    namespace: <%= namespaceName %>
roleRef:
  kind: Role
  name: tekton-<%= ComponentName %>-ssh-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-git-access
  namespace: <%= namespaceName %>
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create", "get", "list", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-<%= ComponentName %>-git-access-binding
  namespace: <%= namespaceName %>
subjects:
  - kind: ServiceAccount
    name: tekton-service-account
    namespace: <%= namespaceName %>
roleRef:
  kind: ClusterRole
  name: tekton-<%= ComponentName %>-git-access
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-<%= ComponentName %>-workspace-access-role
  namespace: <%= namespaceName %>
rules:
  - apiGroups: [""]
    resources: ["pods/exec", "pods/log"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "exec"]
  - apiGroups: ["tekton.dev"]
    resources: ["pipelineruns", "tasks", "taskruns"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-<%= ComponentName %>-workspace-access-binding
  namespace: <%= namespaceName %>
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-<%= ComponentName %>-workspace-access-role
subjects:
  - kind: ServiceAccount
    name: ticgo-pipeline-service-account
    namespace: <%= namespaceName %>
