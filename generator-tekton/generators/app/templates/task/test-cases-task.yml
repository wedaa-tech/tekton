apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: cash-deposits-test-cases
  namespace: <%= projectName %>-namespace
spec:
  workspaces:
    - name: source
  results:
    - name: test-status
    - name: coverage
    - name: test-summary
  params:
    - name: clone-dir
      type: string
    - name: git-branch
      type: string
  steps:
    <%_ if (component == "react") { _%>
    - name: test-cases
      image: node:20.0.0
      script: |
        cd /workspace/source/$(params.clone-dir)
        ls 
        rm -rf test-repost.txt
        npm i --force
        npm test -- --watchAll=false 2>&1 | tee /workspace/source/$(params.clone-dir)/test-report.txt
    <%_ } _%>
    <%_ if (component == "spring") { _%>
    - name: test-cases
      image: maven:latest
      script: |
        cd /workspace/source/$(params.clone-dir)
        ls 
        rm -rf test-repost.txt
        mvn test -- --watchAll=false 2>&1 | tee /workspace/source/$(params.clone-dir)/test-report.txt
    <%_ } _%>
    <%_ if (component == "go") { _%>
    - name: test-cases
      image: golang:latest
      script: |
        cd /workspace/source/$(params.clone-dir)
        ls 
        rm -rf test-repost.txt
        go test -- --watchAll=false 2>&1 | tee /workspace/source/$(params.clone-dir)/test-report.txt
    <%_ } _%>
    <%_ if (component == "python") { _%>
    - name: test-cases
      image: python:latest
      script: |
        cd /workspace/source/$(params.clone-dir)
        ls 
        rm -rf test-repost.txt
        pytest -- --watchAll=false 2>&1 | tee /workspace/source/$(params.clone-dir)/test-report.txt
    <%_ } _%>
    <%_ if (component == "angular") { _%>
    - name: test-cases
      image: node:20.0.0
      script: |
        cd /workspace/source/$(params.clone-dir)
        ls 
        rm -rf test-repost.txt
        npm i --force
        npm test -- --watchAll=false 2>&1 | tee /workspace/source/$(params.clone-dir)/test-report.txt
    <%_ } _%>  
 
    - name: extract-test-status-and-coverage
      image: bash:latest
      script: |
        if grep -q "Test Suites: .* failed" /workspace/source/$(params.clone-dir)/test-report.txt; then
          echo "Test failed"
          echo -n "1" > /tekton/results/test-status
        else
          echo "Test succeeded"
          echo -n "0" > /tekton/results/test-status
        fi

        # Adjusted coverage extraction
        COVERAGE=$(grep -Eo 'All files.*\([0-9]+%' /workspace/source/$(params.clone-dir)/test-report.txt | grep -Eo '[0-9]+%' || echo "0%")
        echo "Test coverage: $COVERAGE"
        echo -n "$COVERAGE" > /tekton/results/coverage

    - name: extract-test-summary
      image: bash:latest
      script: |
        echo "Extracting test summary"

        # Print the content of test-report.txt for debugging
        echo "Debugging: Printing the contents of test-report.txt"
        cat /workspace/source/$(params.clone-dir)/test-report.txt
        
        # Adjusted pattern for matching test summary
        pattern="Tests:.*([0-9]+ passed).*([0-9]+ total)"
        summary=$(grep -Eo "$pattern" /workspace/source/$(params.clone-dir)/test-report.txt | head -n 1)

        echo "Extracted summary: $summary"

        if [[ -n "$summary" ]]; then
          echo "$summary"
          echo -n "$summary" > /tekton/results/test-summary
        else
          echo "Test summary not found"
          echo -n "Test summary not found" > /tekton/results/test-summary
        fi



   

  

